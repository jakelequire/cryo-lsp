{
    "scopeName": "source.cryo",
    "patterns": [
        {
            "name": "comment.line.double-slash.cryo",
            "begin": "//",
            "end": "$"
        },
        {
            "name": "comment.block.cryo",
            "begin": "/\\*",
            "end": "\\*/"
        },
        {
            "name": "keyword.declaration.cryo",
            "match": "\\b(const|mut|function)\\b"
        },
        {
            "name": "keyword.control.cryo",
            "match": "\\b(let|if|else|for|while|return|break|continue)\\b"
        },
        {
            "name": "keyword.operator.cryo",
            "match": "\\b(and|or|not|in|is)\\b"
        },
        {
            "name": "storage.type.cryo",
            "match": "\\b(int|float|string|bool|void|boolean)\\b"
        },
        {
            "name": "constant.numeric.cryo",
            "match": "\\b\\d+(\\.\\d+)?\\b"
        },
        {
            "name": "string.quoted.double.cryo",
            "begin": "\"",
            "end": "\""
        },
        {
            "name": "variable.parameter.cryo",
            "match": "\\b[A-Za-z_][A-Za-z0-9_]*\\b"
        },
        {
            "name": "type.annotation.cryo",
            "match": "(?<=: )\\b[A-Za-z_][A-Za-z0-9_]*\\b"
        }
    ],
    "repository": {
        "function_definition": {
            "patterns": [
                {
                    "name": "entity.name.function.cryo",
                    "match": "\\b[A-Za-z_][A-Za-z0-9_]*\\b(?=\\s*\\()"
                }
            ]
        }
    }
}
